<!-- import Highcharts libraries -->
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/pattern-fill.js"></script>

{% assign min = 0 %}
{% assign max = data.size %}
{% assign diff = max | minus: min %}
{% assign randomNumber = "now" | date: "%N" | modulo: diff | plus: min %}

<div class="layout layout--col">
  <span class="title">{{ data[randomNumber].title }}</span>
  <div class="w-full b-h-gray-1"></div>

  <div class="grid">
    <div class="col--span-1">
      <div class="flex flex--col gap--small w--full flex--center">
        <img class="image-dither w--70 h--28" src="{{ data[randomNumber].thumb }}" style="height: 2">
        <span class="value value--xlarge value--tnums" data-fit-value="true">{{ data[randomNumber].salePrice | default 0 | number_to_currency }}</span>

        <div class="w-full b-h-gray-5"></div>

        <div class="grid grid--cols-2">
          <div class="item">
            <div class="meta"></div>
            <div class="content">
              <span class="value value--small value--tnums " data-fit-value="true">{{ data[randomNumber].savings | default 0 | round }}% off</span>
              <span class="label">Was {{ data[randomNumber].normalPrice | default 0 | number_to_currency }}</span>
            </div>
          </div>
          <div class="item">
            <div class="meta"></div>
            <div class="content">
              <span class="value value--small value--tnums" data-fit-value="true">{{ data[randomNumber].dealRating | default 0 | round }}/10</span>
              <span class="label">Deal rating</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="col--span-1 col--center">
      <div class="grid grid--col-2">
        <div>
          <div id="rating_1" style="height: 1;"></div>
          {% if data[randomNumber].steamRatingText == null %}

          {% assign metacriticScore = data[randomNumber].metacriticScore | ceil %}
          {% if metacriticScore > 95 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Overwhelmingly Positive</span>
          {% elsif metacriticScore >= 90 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Very Positive</span>
          {% elsif metacriticScore >= 70 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Mostly Positive</span>
          {% elsif metacriticScore >= 60 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Positive</span>
          {% elsif metacriticScore >= 45 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Mixed</span>
          {% elsif metacriticScore >= 40 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Mostly Negative</span>
          {% elsif metacriticScore >= 30 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Very Negative</span>
          {% elsif metacriticScore <= 30 and metacriticScore > 0 %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Overwhelmingly Negative</span>
          {% else %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">Not enough reviews</span>
          {% endif %}
          {% else %}
          <span class="label label--inverted text--center" style="width:fit-content; margin: auto">{{ data[randomNumber].steamRatingText | default: "Not enough reviews" }}</span>
          {% endif %}
        </div>
      </div>
    </div>

  </div>
</div>

<div class="title_bar">
  <img class="image" src="https://upload.wikimedia.org/wikipedia/commons/8/83/Steam_icon_logo.svg" />
  <span class="title">Random Steam Deals of the Day</span>
</div>

<script type="text/javascript">
  function createGauge(score, index, opts) {
    Highcharts.chart(`rating_${index}`, {
      chart: {
        type: "gauge",
        height: opts.height
      },

      title: {
        text: opts.title
      },

      pane: {
        startAngle: -150,
        endAngle: 150,
        background: {
          backgroundColor: "transparent",
          borderWidth: 0
        }
      },

      plotOptions: {
        gauge: {
          animation: false,
          pivot: {
            backgroundColor: "transparent"
          },
          dial: {
            backgroundColor: "transparent",
            baseWidth: 0,
          },
        }
      },

      yAxis: {
        min: 0,
        max: 100,
        minorTickInterval: 0,
        tickColor: "#ffffff",
        tickLength: 40,
        tickPixelInterval: 40,
        tickWidth: 0,
        lineWidth: 0,
        title: {
          text: opts.yAxis.title,
          style: {
            color: "#000000",
            fontFamily: "NicoPups",
            fontSize: "16px"
          }
        },
        labels: {
          ...opts.labels,
          style: {
            fontSize: "16px"
          }
        },
        plotBands: [{
          from: 1,
          to: score,
          color: {
            pattern: {
              image: "https://usetrmnl.com/images/grayscale/gray-2.png",
              width: 12,
              height: 12
            }
          },
          innerRadius: "82%",
          borderRadius: "50%"
        }, {
          from: score + 1,
          to: 100,
          color: {
            pattern: {
              image: "https://usetrmnl.com/images/grayscale/gray-5.png",
              width: 12,
              height: 12
            }
          },
          innerRadius: "82%",
          borderRadius: "50%",
        }]
      },

      series: [{
        name: "Score",
        data: [score],
        dataLabels: {
          borderWidth: 0,
          style: {
            fontSize: opts.series.fontSize,
            fontWeight: opts.series.fontWeight || "400",
            fontFamily: opts.series.fontFamily || "inherit"
          }
        }
      }],

      credits: {
        enabled: false
      }
    });
  }

  let opts = {     
    title: null,
    height: "80%",
    labels: { enabled: false },
    series: {
      fontSize: "3em",
      fontWeight: "550"
    },
    yAxis: {
      {% if data[randomNumber].steamRatingPercent == "0" %}
  title: "Metacritic score"
  {% else %}
  title: "{{ data[randomNumber].steamRatingCount | default: 0 }} ratings"
  {% endif %}
  }
  }


  {% if data[randomNumber].steamRatingPercent == "0" %}
  createGauge({{ data[randomNumber].metacriticScore | default: 0 }}, "1", opts)
  {% else %}
  createGauge({{ data[randomNumber].steamRatingPercent | default: 0 }}, "1", opts)
  {% endif %}


</script>